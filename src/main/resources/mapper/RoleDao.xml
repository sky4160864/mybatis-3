<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cap.dao.RoleDao">
    <resultMap id="roleMap" type="com.cap.entity.Role">
        <id column="id" property="id" javaType="long" jdbcType="BIGINT"/>
        <result column="role_name" property="roleName" javaType="string" jdbcType="VARCHAR"/>
        <result column="note" property="note" typeHandler="com.cap.handle.MyStringHandler"/>
    </resultMap>

    <resultMap id="roleUsersMap" extends="roleMap" type="com.cap.entity.RoleWithUsers">
        <collection property="users" ofType="com.cap.entity.User">
            <result column="uid" property="id"/>
            <result column="user_name" property="userName"/>
            <result column="age" property="age"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        role_name,
        note
    </sql>

    <!-- 没有启用auto-mapping-behavior自动映射 role_name无法映射到roleName
    <select id="getRole" parameterType="long" resultType="com.cap.entity.Role">
    -->
    <select id="getRole" parameterType="long" resultMap="roleMap">
        select id,
               role_name,
               note
        from role
        where id = #{id}
    </select>

    <select id="getRoleWithUsers" parameterType="long" resultMap="roleUsersMap">
        select a.id,
               a.role_name,
               a.note,
               u.id uid,
               u.user_name,
               u.age
        from role a
                     inner join role_user ru on a.id = ru.role_id
                     inner join user u on ru.user_id = u.id
        where a.id = #{id}
    </select>

    <!--debug TrimSqlNode-->
    <!--<select id="getRoleTrimDebug" parameterType="long" resultMap="roleMap">
        select id,
               role_name,
               note
        from role
        <where>
            <if >
                ...
            </if>
        </where>
    </select>-->

    <!--测试sql语句-->
    <sql id="include01">
        from role a
    </sql>
    <select id="getRoleWithUsers2" parameterType="long" resultMap="roleMap">
        select a.id,
               a.role_name,
               a.note,
               u.id uid,
               u.user_name,
               u.age
        <include refid="include01"/>
        inner join role_user ru on a.id = ru.role_id
        inner join user u on ru.user_id = u.id
                where a.id = #{id}
    </select>

    <select id="findRole" parameterType="long" resultMap="roleMap">
        select id,
               role_name,
               note
        from role
        where role_name like
              CONCAT('%', #{roleName,javaType=string,jdbcType=VARCHAR,typeHandler=com.cap.handle.MyStringHandler}, '%')
    </select>
    <insert id="insertRole" parameterType="com.cap.entity.Role">
        insert into role(role_name, note) value (#{roleName}, #{note})
    </insert>
    <delete id="deleteRole" parameterType="long">
        delete
        from role
        where id = #{id}
    </delete>
    <!--auto generated by MybatisCodeHelper on 2021-06-19-->
    <select id="selectByIdAndRoleName" resultMap="roleMap">
        select
        <include refid="Base_Column_List"/>
        from role
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
<!--auto generated by MybatisCodeHelper on 2021-06-19-->
    <update id="updateIdAndRoleNameAndNote">
        update role
        set id=#{updatedId,jdbcType=BIGINT}, role_name=#{updatedRoleName,jdbcType=VARCHAR}, note=#{updatedNote}
    </update>
<!--auto generated by MybatisCodeHelper on 2021-06-19-->
    <update id="updateById">
        update role
        <set>
            <if test="updated.id != null">
                id = #{updated.id,jdbcType=BIGINT},
            </if>
            <if test="updated.roleName != null">
                role_name = #{updated.roleName,jdbcType=VARCHAR},
            </if>
            <if test="updated.note != null">
                note = #{updated.note},
            </if>
        </set>
        <where>
<if test="id != null">
 and id=#{id,jdbcType=BIGINT}</if>
        </where>
    </update>

</mapper>
